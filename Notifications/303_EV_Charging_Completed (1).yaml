alias: 303_EV_Charging_Completed
description: |
  # EV Charging Monitor - Session Complete
  Version: 1.7.0
  Last Updated: 2025-03-02
  
  ## Functions:
  1. Detects charging session completion
  2. Validates final charging states
  3. Records final session metrics
  4. Provides cost and energy summaries
triggers:
  - platform: state
    entity_id: sensor.eveus_ev_charger_state
    from: Charging
    id: charging_complete
conditions:
  - condition: template
    value_template: >
      {{ trigger.to_state.state != 'Charging' and
         trigger.to_state.state not in ['unknown', 'unavailable'] }}
  - condition: numeric_state
    entity_id: sensor.eveus_ev_charger_power
    below: 100
  - condition: template
    value_template: >
      {% set final = states('sensor.eveus_ev_charger_soc_percent')|float(0) %}
      {% set initial = states('input_number.ev_initial_soc')|float(0) %}
      {{ final > initial and final > 0 }}
actions:
  - data:
      title: EV ğŸ”‹ Charging Completed
      message: >
        ğŸ•’ Session Time: {{ session_data.time }} ğŸ”‹ SoC: {{
        session_data.initial_soc }}% â†’ {{ session_data.final_soc }}% (+{{
        session_data.soc_increase }}%) âš¡ Energy: {{ session_data.initial_kwh
        }}kWh â†’ {{ session_data.final_kwh }}kWh (+{{ session_data.added_kwh
        }}kWh) ğŸ’¸ Cost: {{ session_data.cost }}â‚´
    action: notify.harold
variables:
  session_data:
    time: >
      {{ states('sensor.eveus_ev_charger_session_time')|default('0m') }}
    initial_soc: "{{ states('input_number.ev_initial_soc')|float(0)|round(0) }}"
    final_soc: "{{ states('sensor.eveus_ev_charger_soc_percent')|float(0)|round(0) }}"
    soc_increase: >
      {{ (states('sensor.eveus_ev_charger_soc_percent')|float(0) -
      states('input_number.ev_initial_soc')|float(0))|round(0) }}
    capacity: "{{ states('input_number.ev_battery_capacity')|float(80) }}"
    initial_kwh: >
      {{ (states('input_number.ev_battery_capacity')|float(80) *
      states('input_number.ev_initial_soc')|float(0) / 100)|round(1) }}
    final_kwh: >
      {{ (states('input_number.ev_battery_capacity')|float(80) *
      states('sensor.eveus_ev_charger_soc_percent')|float(0) / 100)|round(1) }}
    added_kwh: >
      {{ ((states('input_number.ev_battery_capacity')|float(80) *
      states('sensor.eveus_ev_charger_soc_percent')|float(0) / 100) - 
          (states('input_number.ev_battery_capacity')|float(80) * states('input_number.ev_initial_soc')|float(0) / 100))|round(1) }}
    cost: "{{ states('sensor.eveus_ev_charger_counter_a_cost')|float(0)|round(0) }}"
mode: single
max_exceeded: silent
